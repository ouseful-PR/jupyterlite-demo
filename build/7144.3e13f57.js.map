{"version":3,"file":"7144.3e13f57.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/cells/lib/celldragutils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/cells/lib/collapser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/cells/lib/headerfooter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/cells/lib/inputarea.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/attachments/lib/model.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/cells/lib/model.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/cells/lib/placeholder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/cells/lib/resizeHandle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/cells/lib/widget.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/cells/node_modules/marked/lib/marked.js"],"sourcesContent":["/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * This module contains some utility functions to operate on cells. This\n * could be shared by widgets that contain cells, like the CodeConsole or\n * Notebook widgets.\n */\nimport { each } from '@lumino/algorithm';\nimport { h, VirtualDOM } from '@lumino/virtualdom';\n/**\n * Constants for drag\n */\n/**\n * The threshold in pixels to start a drag event.\n */\nconst DRAG_THRESHOLD = 5;\n/**\n * The class name added to drag images.\n */\nconst DRAG_IMAGE_CLASS = 'jp-dragImage';\n/**\n * The class name added to singular drag images\n */\nconst SINGLE_DRAG_IMAGE_CLASS = 'jp-dragImage-singlePrompt';\n/**\n * The class name added to the drag image cell content.\n */\nconst CELL_DRAG_CONTENT_CLASS = 'jp-dragImage-content';\n/**\n * The class name added to the drag image cell content.\n */\nconst CELL_DRAG_PROMPT_CLASS = 'jp-dragImage-prompt';\n/**\n * The class name added to the drag image cell content.\n */\nconst CELL_DRAG_MULTIPLE_BACK = 'jp-dragImage-multipleBack';\nexport var CellDragUtils;\n(function (CellDragUtils) {\n    /**\n     * Find the cell index containing the target html element.\n     * This function traces up the DOM hierarchy to find the root cell\n     * node. Then find the corresponding child and select it.\n     *\n     * @param node - the cell node or a child of the cell node.\n     * @param cells - an iterable of Cells\n     * @param isCellNode - a function that takes in a node and checks if\n     * it is a cell node.\n     *\n     * @returns index of the cell we're looking for. Returns -1 if\n     * the cell is not founds\n     */\n    function findCell(node, cells, isCellNode) {\n        let cellIndex = -1;\n        while (node && node.parentElement) {\n            if (isCellNode(node)) {\n                each(cells, (cell, index) => {\n                    if (cell.node === node) {\n                        cellIndex = index;\n                        return false;\n                    }\n                });\n                break;\n            }\n            node = node.parentElement;\n        }\n        return cellIndex;\n    }\n    CellDragUtils.findCell = findCell;\n    /**\n     * Detect which part of the cell triggered the MouseEvent\n     *\n     * @param cell - The cell which contains the MouseEvent's target\n     * @param target - The DOM node which triggered the MouseEvent\n     */\n    function detectTargetArea(cell, target) {\n        let targetArea;\n        if (cell) {\n            if (cell.editorWidget.node.contains(target)) {\n                targetArea = 'input';\n            }\n            else if (cell.promptNode.contains(target)) {\n                targetArea = 'prompt';\n            }\n            else {\n                targetArea = 'cell';\n            }\n        }\n        else {\n            targetArea = 'unknown';\n        }\n        return targetArea;\n    }\n    CellDragUtils.detectTargetArea = detectTargetArea;\n    /**\n     * Detect if a drag event should be started. This is down if the\n     * mouse is moved beyond a certain distance (DRAG_THRESHOLD).\n     *\n     * @param prevX - X Coordinate of the mouse pointer during the mousedown event\n     * @param prevY - Y Coordinate of the mouse pointer during the mousedown event\n     * @param nextX - Current X Coordinate of the mouse pointer\n     * @param nextY - Current Y Coordinate of the mouse pointer\n     */\n    function shouldStartDrag(prevX, prevY, nextX, nextY) {\n        const dx = Math.abs(nextX - prevX);\n        const dy = Math.abs(nextY - prevY);\n        return dx >= DRAG_THRESHOLD || dy >= DRAG_THRESHOLD;\n    }\n    CellDragUtils.shouldStartDrag = shouldStartDrag;\n    /**\n     * Create an image for the cell(s) to be dragged\n     *\n     * @param activeCell - The cell from where the drag event is triggered\n     * @param selectedCells - The cells to be dragged\n     */\n    function createCellDragImage(activeCell, selectedCells) {\n        const count = selectedCells.length;\n        let promptNumber;\n        if (activeCell.model.type === 'code') {\n            const executionCount = activeCell.model\n                .executionCount;\n            promptNumber = ' ';\n            if (executionCount) {\n                promptNumber = executionCount.toString();\n            }\n        }\n        else {\n            promptNumber = '';\n        }\n        const cellContent = activeCell.model.value.text.split('\\n')[0].slice(0, 26);\n        if (count > 1) {\n            if (promptNumber !== '') {\n                return VirtualDOM.realize(h.div(h.div({ className: DRAG_IMAGE_CLASS }, h.span({ className: CELL_DRAG_PROMPT_CLASS }, '[' + promptNumber + ']:'), h.span({ className: CELL_DRAG_CONTENT_CLASS }, cellContent)), h.div({ className: CELL_DRAG_MULTIPLE_BACK }, '')));\n            }\n            else {\n                return VirtualDOM.realize(h.div(h.div({ className: DRAG_IMAGE_CLASS }, h.span({ className: CELL_DRAG_PROMPT_CLASS }), h.span({ className: CELL_DRAG_CONTENT_CLASS }, cellContent)), h.div({ className: CELL_DRAG_MULTIPLE_BACK }, '')));\n            }\n        }\n        else {\n            if (promptNumber !== '') {\n                return VirtualDOM.realize(h.div(h.div({ className: `${DRAG_IMAGE_CLASS} ${SINGLE_DRAG_IMAGE_CLASS}` }, h.span({ className: CELL_DRAG_PROMPT_CLASS }, '[' + promptNumber + ']:'), h.span({ className: CELL_DRAG_CONTENT_CLASS }, cellContent))));\n            }\n            else {\n                return VirtualDOM.realize(h.div(h.div({ className: `${DRAG_IMAGE_CLASS} ${SINGLE_DRAG_IMAGE_CLASS}` }, h.span({ className: CELL_DRAG_PROMPT_CLASS }), h.span({ className: CELL_DRAG_CONTENT_CLASS }, cellContent))));\n            }\n        }\n    }\n    CellDragUtils.createCellDragImage = createCellDragImage;\n})(CellDragUtils || (CellDragUtils = {}));\n//# sourceMappingURL=celldragutils.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport { ElementExt } from '@lumino/domutils';\nimport * as React from 'react';\n/**\n * The CSS class added to all collapsers.\n */\nconst COLLAPSER_CLASS = 'jp-Collapser';\n/**\n * The CSS class added to the collapser child.\n */\nconst COLLAPSER_CHILD_CLASS = 'jp-Collapser-child';\n/**\n * The CSS class added to input collapsers.\n */\nconst INPUT_COLLAPSER = 'jp-InputCollapser';\n/**\n * The CSS class added to output collapsers.\n */\nconst OUTPUT_COLLAPSER = 'jp-OutputCollapser';\n/**\n * Abstract collapser base class.\n *\n * ### Notes\n * A collapser is a visible div to the left of a cell's\n * input/output that a user can click on to collapse the\n * input/output.\n */\nexport class Collapser extends ReactWidget {\n    /**\n     * Construct a new collapser.\n     */\n    constructor() {\n        super();\n        this.addClass(COLLAPSER_CLASS);\n    }\n    /**\n     * Is the input/output of the parent collapsed.\n     */\n    get collapsed() {\n        return false;\n    }\n    /**\n     * Render the collapser with the virtual DOM.\n     */\n    render() {\n        const childClass = COLLAPSER_CHILD_CLASS;\n        return React.createElement(\"div\", { className: childClass, onClick: e => this.handleClick(e) });\n    }\n}\n/**\n * A collapser subclass to collapse a cell's input area.\n */\nexport class InputCollapser extends Collapser {\n    /**\n     * Construct a new input collapser.\n     */\n    constructor() {\n        super();\n        this.addClass(INPUT_COLLAPSER);\n    }\n    /**\n     * Is the cell's input collapsed?\n     */\n    get collapsed() {\n        var _a;\n        const cell = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.parent;\n        if (cell) {\n            return cell.inputHidden;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Handle a click event for the user to collapse the cell's input.\n     */\n    handleClick(e) {\n        var _a;\n        const cell = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.parent;\n        if (cell) {\n            cell.inputHidden = !cell.inputHidden;\n        }\n        /* We need this until we watch the cell state */\n        this.update();\n    }\n}\n/**\n * A collapser subclass to collapse a cell's output area.\n */\nexport class OutputCollapser extends Collapser {\n    /**\n     * Construct a new output collapser.\n     */\n    constructor() {\n        super();\n        this.addClass(OUTPUT_COLLAPSER);\n    }\n    /**\n     * Is the cell's output collapsed?\n     */\n    get collapsed() {\n        var _a;\n        const cell = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.parent;\n        if (cell) {\n            return cell.outputHidden;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Handle a click event for the user to collapse the cell's output.\n     */\n    handleClick(e) {\n        var _a, _b;\n        const cell = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.parent;\n        if (cell) {\n            cell.outputHidden = !cell.outputHidden;\n            /* Scroll cell into view after output collapse */\n            if (cell.outputHidden) {\n                let area = (_b = cell.parent) === null || _b === void 0 ? void 0 : _b.node;\n                if (area) {\n                    ElementExt.scrollIntoViewIfNeeded(area, cell.node);\n                }\n            }\n        }\n        /* We need this until we watch the cell state */\n        this.update();\n    }\n}\n//# sourceMappingURL=collapser.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { Widget } from '@lumino/widgets';\n/**\n * The CSS class added to the cell header.\n */\nconst CELL_HEADER_CLASS = 'jp-CellHeader';\n/**\n * The CSS class added to the cell footer.\n */\nconst CELL_FOOTER_CLASS = 'jp-CellFooter';\n/**\n * Default implementation of a cell header.\n */\nexport class CellHeader extends Widget {\n    /**\n     * Construct a new cell header.\n     */\n    constructor() {\n        super();\n        this.addClass(CELL_HEADER_CLASS);\n    }\n}\n/**\n * Default implementation of a cell footer.\n */\nexport class CellFooter extends Widget {\n    /**\n     * Construct a new cell footer.\n     */\n    constructor() {\n        super();\n        this.addClass(CELL_FOOTER_CLASS);\n    }\n}\n//# sourceMappingURL=headerfooter.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { PanelLayout } from '@lumino/widgets';\nimport { Widget } from '@lumino/widgets';\nimport { CodeEditorWrapper } from '@jupyterlab/codeeditor';\nimport { CodeMirrorEditorFactory } from '@jupyterlab/codemirror';\n/**\n * The class name added to input area widgets.\n */\nconst INPUT_AREA_CLASS = 'jp-InputArea';\n/**\n * The class name added to the prompt area of cell.\n */\nconst INPUT_AREA_PROMPT_CLASS = 'jp-InputArea-prompt';\n/**\n * The class name added to OutputPrompt.\n */\nconst INPUT_PROMPT_CLASS = 'jp-InputPrompt';\n/**\n * The class name added to the editor area of the cell.\n */\nconst INPUT_AREA_EDITOR_CLASS = 'jp-InputArea-editor';\n/** ****************************************************************************\n * InputArea\n ******************************************************************************/\n/**\n * An input area widget, which hosts a prompt and an editor widget.\n */\nexport class InputArea extends Widget {\n    /**\n     * Construct an input area widget.\n     */\n    constructor(options) {\n        super();\n        this.addClass(INPUT_AREA_CLASS);\n        const model = (this.model = options.model);\n        const contentFactory = (this.contentFactory =\n            options.contentFactory || InputArea.defaultContentFactory);\n        // Prompt\n        const prompt = (this._prompt = contentFactory.createInputPrompt());\n        prompt.addClass(INPUT_AREA_PROMPT_CLASS);\n        // Editor\n        const editorOptions = {\n            model,\n            factory: contentFactory.editorFactory,\n            updateOnShow: options.updateOnShow\n        };\n        const editor = (this._editor = new CodeEditorWrapper(editorOptions));\n        editor.addClass(INPUT_AREA_EDITOR_CLASS);\n        const layout = (this.layout = new PanelLayout());\n        layout.addWidget(prompt);\n        if (!options.placeholder) {\n            layout.addWidget(editor);\n        }\n    }\n    /**\n     * Get the CodeEditorWrapper used by the cell.\n     */\n    get editorWidget() {\n        return this._editor;\n    }\n    /**\n     * Get the CodeEditor used by the cell.\n     */\n    get editor() {\n        return this._editor.editor;\n    }\n    /**\n     * Get the prompt node used by the cell.\n     */\n    get promptNode() {\n        return this._prompt.node;\n    }\n    /**\n     * Render an input instead of the text editor.\n     */\n    renderInput(widget) {\n        const layout = this.layout;\n        if (this._rendered) {\n            this._rendered.parent = null;\n        }\n        this._editor.hide();\n        this._rendered = widget;\n        layout.addWidget(widget);\n    }\n    /**\n     * Show the text editor.\n     */\n    showEditor() {\n        if (this._rendered) {\n            this._rendered.parent = null;\n        }\n        this._editor.show();\n    }\n    /**\n     * Set the prompt of the input area.\n     */\n    setPrompt(value) {\n        this._prompt.executionCount = value;\n    }\n    /**\n     * Dispose of the resources held by the widget.\n     */\n    dispose() {\n        // Do nothing if already disposed.\n        if (this.isDisposed) {\n            return;\n        }\n        this._prompt = null;\n        this._editor = null;\n        this._rendered = null;\n        super.dispose();\n    }\n}\n/**\n * A namespace for `InputArea` statics.\n */\n(function (InputArea) {\n    /**\n     * Default implementation of `IContentFactory`.\n     *\n     * This defaults to using an `editorFactory` based on CodeMirror.\n     */\n    class ContentFactory {\n        /**\n         * Construct a `ContentFactory`.\n         */\n        constructor(options = {}) {\n            this._editor = options.editorFactory || InputArea.defaultEditorFactory;\n        }\n        /**\n         * Return the `CodeEditor.Factory` being used.\n         */\n        get editorFactory() {\n            return this._editor;\n        }\n        /**\n         * Create an input prompt.\n         */\n        createInputPrompt() {\n            return new InputPrompt();\n        }\n    }\n    InputArea.ContentFactory = ContentFactory;\n    /**\n     * A function to create the default CodeMirror editor factory.\n     */\n    function _createDefaultEditorFactory() {\n        const editorServices = new CodeMirrorEditorFactory();\n        return editorServices.newInlineEditor;\n    }\n    /**\n     * The default editor factory singleton based on CodeMirror.\n     */\n    InputArea.defaultEditorFactory = _createDefaultEditorFactory();\n    /**\n     * The default `ContentFactory` instance.\n     */\n    InputArea.defaultContentFactory = new ContentFactory({});\n})(InputArea || (InputArea = {}));\n/**\n * The default input prompt implementation.\n */\nexport class InputPrompt extends Widget {\n    /*\n     * Create an output prompt widget.\n     */\n    constructor() {\n        super();\n        this._executionCount = null;\n        this.addClass(INPUT_PROMPT_CLASS);\n    }\n    /**\n     * The execution count for the prompt.\n     */\n    get executionCount() {\n        return this._executionCount;\n    }\n    set executionCount(value) {\n        this._executionCount = value;\n        if (value === null) {\n            this.node.textContent = ' ';\n        }\n        else {\n            this.node.textContent = `[${value || ' '}]:`;\n        }\n    }\n}\n//# sourceMappingURL=inputarea.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ObservableMap } from '@jupyterlab/observables';\nimport { AttachmentModel, imageRendererFactory } from '@jupyterlab/rendermime';\nimport { Signal } from '@lumino/signaling';\n/**\n * The default implementation of the IAttachmentsModel.\n */\nexport class AttachmentsModel {\n    /**\n     * Construct a new observable outputs instance.\n     */\n    constructor(options = {}) {\n        this._map = new ObservableMap();\n        this._isDisposed = false;\n        this._stateChanged = new Signal(this);\n        this._changed = new Signal(this);\n        this._modelDB = null;\n        this._serialized = null;\n        this._changeGuard = false;\n        this.contentFactory =\n            options.contentFactory || AttachmentsModel.defaultContentFactory;\n        if (options.values) {\n            for (const key of Object.keys(options.values)) {\n                if (options.values[key] !== undefined) {\n                    this.set(key, options.values[key]);\n                }\n            }\n        }\n        this._map.changed.connect(this._onMapChanged, this);\n        // If we are given a IModelDB, keep an up-to-date\n        // serialized copy of the AttachmentsModel in it.\n        if (options.modelDB) {\n            this._modelDB = options.modelDB;\n            this._serialized = this._modelDB.createValue('attachments');\n            if (this._serialized.get()) {\n                this.fromJSON(this._serialized.get());\n            }\n            else {\n                this._serialized.set(this.toJSON());\n            }\n            this._serialized.changed.connect(this._onSerializedChanged, this);\n        }\n    }\n    /**\n     * A signal emitted when the model state changes.\n     */\n    get stateChanged() {\n        return this._stateChanged;\n    }\n    /**\n     * A signal emitted when the model changes.\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * The keys of the attachments in the model.\n     */\n    get keys() {\n        return this._map.keys();\n    }\n    /**\n     * Get the length of the items in the model.\n     */\n    get length() {\n        return this._map.keys().length;\n    }\n    /**\n     * Test whether the model is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of the resources used by the model.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._map.dispose();\n        Signal.clearData(this);\n    }\n    /**\n     * Whether the specified key is set.\n     */\n    has(key) {\n        return this._map.has(key);\n    }\n    /**\n     * Get an item at the specified key.\n     */\n    get(key) {\n        return this._map.get(key);\n    }\n    /**\n     * Set the value at the specified key.\n     */\n    set(key, value) {\n        // Normalize stream data.\n        const item = this._createItem({ value });\n        this._map.set(key, item);\n    }\n    /**\n     * Remove the attachment whose name is the specified key\n     */\n    remove(key) {\n        this._map.delete(key);\n    }\n    /**\n     * Clear all of the attachments.\n     */\n    clear() {\n        this._map.values().forEach((item) => {\n            item.dispose();\n        });\n        this._map.clear();\n    }\n    /**\n     * Deserialize the model from JSON.\n     *\n     * #### Notes\n     * This will clear any existing data.\n     */\n    fromJSON(values) {\n        this.clear();\n        Object.keys(values).forEach(key => {\n            if (values[key] !== undefined) {\n                this.set(key, values[key]);\n            }\n        });\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const ret = {};\n        for (const key of this._map.keys()) {\n            ret[key] = this._map.get(key).toJSON();\n        }\n        return ret;\n    }\n    /**\n     * Create an attachment item and hook up its signals.\n     */\n    _createItem(options) {\n        const factory = this.contentFactory;\n        const item = factory.createAttachmentModel(options);\n        item.changed.connect(this._onGenericChange, this);\n        return item;\n    }\n    /**\n     * Handle a change to the list.\n     */\n    _onMapChanged(sender, args) {\n        if (this._serialized && !this._changeGuard) {\n            this._changeGuard = true;\n            this._serialized.set(this.toJSON());\n            this._changeGuard = false;\n        }\n        this._changed.emit(args);\n        this._stateChanged.emit(void 0);\n    }\n    /**\n     * If the serialized version of the outputs have changed due to a remote\n     * action, then update the model accordingly.\n     */\n    _onSerializedChanged(sender, args) {\n        if (!this._changeGuard) {\n            this._changeGuard = true;\n            this.fromJSON(args.newValue);\n            this._changeGuard = false;\n        }\n    }\n    /**\n     * Handle a change to an item.\n     */\n    _onGenericChange() {\n        this._stateChanged.emit(void 0);\n    }\n}\n/**\n * The namespace for AttachmentsModel class statics.\n */\n(function (AttachmentsModel) {\n    /**\n     * The default implementation of a `IAttachmentsModel.IContentFactory`.\n     */\n    class ContentFactory {\n        /**\n         * Create an attachment model.\n         */\n        createAttachmentModel(options) {\n            return new AttachmentModel(options);\n        }\n    }\n    AttachmentsModel.ContentFactory = ContentFactory;\n    /**\n     * The default attachment model factory.\n     */\n    AttachmentsModel.defaultContentFactory = new ContentFactory();\n})(AttachmentsModel || (AttachmentsModel = {}));\n/**\n * A resolver for cell attachments 'attachment:filename'.\n *\n * Will resolve to a data: url.\n */\nexport class AttachmentsResolver {\n    /**\n     * Create an attachments resolver object.\n     */\n    constructor(options) {\n        this._parent = options.parent || null;\n        this._model = options.model;\n    }\n    /**\n     * Resolve a relative url to a correct server path.\n     */\n    async resolveUrl(url) {\n        if (this._parent && !url.startsWith('attachment:')) {\n            return this._parent.resolveUrl(url);\n        }\n        return url;\n    }\n    /**\n     * Get the download url of a given absolute server path.\n     *\n     * #### Notes\n     * The returned URL may include a query parameter.\n     */\n    async getDownloadUrl(path) {\n        if (this._parent && !path.startsWith('attachment:')) {\n            return this._parent.getDownloadUrl(path);\n        }\n        // Return a data URL with the data of the url\n        const key = path.slice('attachment:'.length);\n        const attachment = this._model.get(key);\n        if (attachment === undefined) {\n            // Resolve with unprocessed path, to show as broken image\n            return path;\n        }\n        const { data } = attachment;\n        const mimeType = Object.keys(data)[0];\n        // Only support known safe types:\n        if (mimeType === undefined ||\n            imageRendererFactory.mimeTypes.indexOf(mimeType) === -1) {\n            throw new Error(`Cannot render unknown image mime type \"${mimeType}\".`);\n        }\n        const dataUrl = `data:${mimeType};base64,${data[mimeType]}`;\n        return dataUrl;\n    }\n    /**\n     * Whether the URL should be handled by the resolver\n     * or not.\n     */\n    isLocal(url) {\n        var _a, _b, _c;\n        if (this._parent && !url.startsWith('attachment:')) {\n            return (_c = (_b = (_a = this._parent).isLocal) === null || _b === void 0 ? void 0 : _b.call(_a, url)) !== null && _c !== void 0 ? _c : true;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=model.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { JSONExt } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { AttachmentsModel } from '@jupyterlab/attachments';\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport * as models from '@jupyterlab/shared-models';\nimport { UUID } from '@lumino/coreutils';\nimport { OutputAreaModel } from '@jupyterlab/outputarea';\nconst globalModelDBMutex = models.createMutex();\nexport function isCodeCellModel(model) {\n    return model.type === 'code';\n}\nexport function isMarkdownCellModel(model) {\n    return model.type === 'markdown';\n}\nexport function isRawCellModel(model) {\n    return model.type === 'raw';\n}\n/**\n * An implementation of the cell model.\n */\nexport class CellModel extends CodeEditor.Model {\n    /**\n     * Construct a cell model from optional cell content.\n     */\n    constructor(options) {\n        var _a;\n        super({\n            modelDB: options.modelDB,\n            id: options.id || ((_a = options.cell) === null || _a === void 0 ? void 0 : _a.id) || UUID.uuid4()\n        });\n        /**\n         * A signal emitted when the state of the model changes.\n         */\n        this.contentChanged = new Signal(this);\n        /**\n         * A signal emitted when a model state changes.\n         */\n        this.stateChanged = new Signal(this);\n        this.value.changed.connect(this.onGenericChange, this);\n        const cellType = this.modelDB.createValue('type');\n        cellType.set(this.type);\n        const observableMetadata = this.modelDB.createMap('metadata');\n        observableMetadata.changed.connect(this.onModelDBMetadataChange, this);\n        observableMetadata.changed.connect(this.onGenericChange, this);\n        const cell = options.cell;\n        const trusted = this.modelDB.createValue('trusted');\n        trusted.changed.connect(this.onTrustedChanged, this);\n        if (!cell) {\n            trusted.set(false);\n            return;\n        }\n        trusted.set(!!cell.metadata['trusted']);\n        delete cell.metadata['trusted'];\n        // Set the text value, normalizing line endings to \\n\n        if (Array.isArray(cell.source)) {\n            this.value.text = cell.source\n                .map(s => s.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n'))\n                .join('');\n        }\n        else {\n            this.value.text = cell.source.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n        }\n        const metadata = JSONExt.deepCopy(cell.metadata);\n        if (this.type !== 'raw') {\n            delete metadata['format'];\n        }\n        if (this.type !== 'code') {\n            delete metadata['collapsed'];\n            delete metadata['scrolled'];\n        }\n        for (const key in metadata) {\n            observableMetadata.set(key, metadata[key]);\n        }\n    }\n    /**\n     * The type of cell.\n     */\n    get type() {\n        // This getter really should be abstract, but our current constructor\n        // depends on .type working\n        return 'raw';\n    }\n    /**\n     * The id for the cell.\n     */\n    get id() {\n        return this.sharedModel.getId();\n    }\n    /**\n     * The metadata associated with the cell.\n     */\n    get metadata() {\n        return this.modelDB.get('metadata');\n    }\n    /**\n     * Get the trusted state of the model.\n     */\n    get trusted() {\n        return this.modelDB.getValue('trusted');\n    }\n    /**\n     * Set the trusted state of the model.\n     */\n    set trusted(newValue) {\n        const oldValue = this.trusted;\n        if (oldValue === newValue) {\n            return;\n        }\n        this.modelDB.setValue('trusted', newValue);\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const metadata = Object.create(null);\n        for (const key of this.metadata.keys()) {\n            const value = JSON.parse(JSON.stringify(this.metadata.get(key)));\n            metadata[key] = value;\n        }\n        if (this.trusted) {\n            metadata['trusted'] = true;\n        }\n        return {\n            cell_type: this.type,\n            source: this.value.text,\n            metadata\n        };\n    }\n    /**\n     * Handle a change to the trusted state.\n     *\n     * The default implementation is a no-op.\n     */\n    onTrustedChanged(trusted, args) {\n        /* no-op */\n    }\n    /**\n     * When we initialize a cell model, we create a standalone model that cannot be shared in a YNotebook.\n     * Call this function to re-initialize the local representation based on a fresh shared model (e.g. models.YFile or models.YCodeCell).\n     *\n     * @param sharedModel\n     * @param reinitialize Whether to reinitialize the shared model.\n     */\n    switchSharedModel(sharedModel, reinitialize) {\n        if (reinitialize) {\n            const newValue = sharedModel.getMetadata();\n            if (newValue) {\n                this._updateModelDBMetadata(newValue);\n            }\n        }\n        super.switchSharedModel(sharedModel, reinitialize);\n    }\n    /**\n     * Handle a change to the cell metadata modelDB and reflect it in the shared model.\n     */\n    onModelDBMetadataChange(sender, event) {\n        const metadata = this.sharedModel.getMetadata();\n        globalModelDBMutex(() => {\n            switch (event.type) {\n                case 'add':\n                    this._changeCellMetadata(metadata, event);\n                    break;\n                case 'change':\n                    this._changeCellMetadata(metadata, event);\n                    break;\n                case 'remove':\n                    delete metadata[event.key];\n                    break;\n                default:\n                    throw new Error(`Invalid event type: ${event.type}`);\n            }\n            this.sharedModel.setMetadata(metadata);\n        });\n    }\n    /**\n     * Change the cell metadata for a given event.\n     *\n     * @param metadata The cell metadata.\n     * @param event The event to handle.\n     */\n    _changeCellMetadata(metadata, event) {\n        switch (event.key) {\n            case 'jupyter':\n                metadata.jupyter = event.newValue;\n                break;\n            case 'collapsed':\n                metadata.collapsed = event.newValue;\n                break;\n            case 'name':\n                metadata.name = event.newValue;\n                break;\n            case 'scrolled':\n                metadata.scrolled = event.newValue;\n                break;\n            case 'tags':\n                metadata.tags = event.newValue;\n                break;\n            case 'trusted':\n                metadata.trusted = event.newValue;\n                break;\n            default:\n                // The default is applied for custom metadata that are not\n                // defined in the official nbformat but which are defined\n                // by the user.\n                metadata[event.key] = event.newValue;\n        }\n    }\n    /**\n     * Handle a change to the cell shared model and reflect it in modelDB.\n     * We update the modeldb metadata when the shared model changes.\n     *\n     * This method overrides the CodeEditor protected _onSharedModelChanged\n     * so we first call super._onSharedModelChanged\n     *\n     * @override CodeEditor._onSharedModelChanged\n     */\n    _onSharedModelChanged(sender, change) {\n        super._onSharedModelChanged(sender, change);\n        globalModelDBMutex(() => {\n            var _a;\n            if (change.metadataChange) {\n                const newValue = (_a = change.metadataChange) === null || _a === void 0 ? void 0 : _a.newValue;\n                if (newValue) {\n                    this._updateModelDBMetadata(newValue);\n                }\n            }\n        });\n    }\n    _updateModelDBMetadata(metadata) {\n        Object.keys(metadata).map(key => {\n            switch (key) {\n                case 'collapsed':\n                    this.metadata.set('collapsed', metadata.jupyter);\n                    break;\n                case 'jupyter':\n                    this.metadata.set('jupyter', metadata.jupyter);\n                    break;\n                case 'name':\n                    this.metadata.set('name', metadata.name);\n                    break;\n                case 'scrolled':\n                    this.metadata.set('scrolled', metadata.scrolled);\n                    break;\n                case 'tags':\n                    this.metadata.set('tags', metadata.tags);\n                    break;\n                case 'trusted':\n                    this.metadata.set('trusted', metadata.trusted);\n                    break;\n                default:\n                    // The default is applied for custom metadata that are not\n                    // defined in the official nbformat but which are defined\n                    // by the user.\n                    this.metadata.set(key, metadata[key]);\n            }\n        });\n    }\n    /**\n     * Handle a change to the observable value.\n     */\n    onGenericChange() {\n        this.contentChanged.emit(void 0);\n    }\n}\n/**\n * A base implementation for cell models with attachments.\n */\nexport class AttachmentsCellModel extends CellModel {\n    /**\n     * Construct a new cell with optional attachments.\n     */\n    constructor(options) {\n        super(options);\n        const factory = options.contentFactory || AttachmentsCellModel.defaultContentFactory;\n        let attachments;\n        const cell = options.cell;\n        if (cell && (cell.cell_type === 'raw' || cell.cell_type === 'markdown')) {\n            attachments = cell\n                .attachments;\n        }\n        this._attachments = factory.createAttachmentsModel({\n            values: attachments,\n            modelDB: this.modelDB\n        });\n        this._attachments.stateChanged.connect(this.onGenericChange, this);\n    }\n    /**\n     * Get the attachments of the model.\n     */\n    get attachments() {\n        return this._attachments;\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const cell = super.toJSON();\n        if (this.attachments.length) {\n            cell.attachments = this.attachments.toJSON();\n        }\n        return cell;\n    }\n}\n/**\n * The namespace for `AttachmentsCellModel` statics.\n */\n(function (AttachmentsCellModel) {\n    /**\n     * The default implementation of an `IContentFactory`.\n     */\n    class ContentFactory {\n        /**\n         * Create an attachments model.\n         */\n        createAttachmentsModel(options) {\n            return new AttachmentsModel(options);\n        }\n    }\n    AttachmentsCellModel.ContentFactory = ContentFactory;\n    /**\n     * The shared `ContentFactory` instance.\n     */\n    AttachmentsCellModel.defaultContentFactory = new ContentFactory();\n})(AttachmentsCellModel || (AttachmentsCellModel = {}));\n/**\n * An implementation of a raw cell model.\n */\nexport class RawCellModel extends AttachmentsCellModel {\n    /**\n     * The type of the cell.\n     */\n    get type() {\n        return 'raw';\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const cell = super.toJSON();\n        cell.id = this.id;\n        return cell;\n    }\n}\n/**\n * An implementation of a markdown cell model.\n */\nexport class MarkdownCellModel extends AttachmentsCellModel {\n    /**\n     * Construct a markdown cell model from optional cell content.\n     */\n    constructor(options) {\n        super(options);\n        // Use the Github-flavored markdown mode.\n        this.mimeType = 'text/x-ipythongfm';\n    }\n    /**\n     * The type of the cell.\n     */\n    get type() {\n        return 'markdown';\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const cell = super.toJSON();\n        cell.id = this.id;\n        return cell;\n    }\n}\n/**\n * An implementation of a code cell Model.\n */\nexport class CodeCellModel extends CellModel {\n    /**\n     * Construct a new code cell with optional original cell content.\n     */\n    constructor(options) {\n        var _a;\n        super(options);\n        this._executedCode = '';\n        this._isDirty = false;\n        const factory = options.contentFactory || CodeCellModel.defaultContentFactory;\n        const trusted = this.trusted;\n        const cell = options.cell;\n        let outputs = [];\n        const executionCount = this.modelDB.createValue('executionCount');\n        if (!executionCount.get()) {\n            if (cell && cell.cell_type === 'code') {\n                executionCount.set(cell.execution_count || null);\n                outputs = (_a = cell.outputs) !== null && _a !== void 0 ? _a : [];\n                // If execution count is not null presume the input code was the latest executed\n                // TODO load from the notebook file when the dirty state is stored in it\n                if (cell.execution_count != null) {\n                    // True if execution_count is null or undefined\n                    this._executedCode = this.value.text.trim();\n                }\n            }\n            else {\n                executionCount.set(null);\n            }\n        }\n        this.value.changed.connect(this._onValueChanged, this);\n        executionCount.changed.connect(this._onExecutionCountChanged, this);\n        globalModelDBMutex(() => {\n            const sharedCell = this.sharedModel;\n            sharedCell.setOutputs(outputs);\n        });\n        this._outputs = factory.createOutputArea({ trusted, values: outputs });\n        this._outputs.changed.connect(this.onGenericChange, this);\n        this._outputs.changed.connect(this.onModelDBOutputsChange, this);\n        // We keep `collapsed` and `jupyter.outputs_hidden` metadata in sync, since\n        // they are redundant in nbformat 4.4. See\n        // https://github.com/jupyter/nbformat/issues/137\n        this.metadata.changed.connect(Private.collapseChanged, this);\n        // Sync `collapsed` and `jupyter.outputs_hidden` for the first time, giving\n        // preference to `collapsed`.\n        if (this.metadata.has('collapsed')) {\n            const collapsed = this.metadata.get('collapsed');\n            Private.collapseChanged(this.metadata, {\n                type: 'change',\n                key: 'collapsed',\n                oldValue: collapsed,\n                newValue: collapsed\n            });\n        }\n        else if (this.metadata.has('jupyter')) {\n            const jupyter = this.metadata.get('jupyter');\n            if (jupyter.hasOwnProperty('outputs_hidden')) {\n                Private.collapseChanged(this.metadata, {\n                    type: 'change',\n                    key: 'jupyter',\n                    oldValue: jupyter,\n                    newValue: jupyter\n                });\n            }\n        }\n    }\n    switchSharedModel(sharedModel, reinitialize) {\n        if (reinitialize) {\n            this.clearExecution();\n            sharedModel.getOutputs().forEach(output => this._outputs.add(output));\n        }\n        super.switchSharedModel(sharedModel, reinitialize);\n    }\n    /**\n     * The type of the cell.\n     */\n    get type() {\n        return 'code';\n    }\n    /**\n     * The execution count of the cell.\n     */\n    get executionCount() {\n        return this.modelDB.has('executionCount')\n            ? this.modelDB.getValue('executionCount')\n            : null;\n    }\n    set executionCount(newValue) {\n        const oldValue = this.executionCount;\n        if (newValue === oldValue) {\n            return;\n        }\n        this.modelDB.setValue('executionCount', newValue || null);\n    }\n    /**\n     * Whether the cell is dirty or not.\n     *\n     * A cell is dirty if it is output is not empty and does not\n     * result of the input code execution.\n     */\n    get isDirty() {\n        // Test could be done dynamically with this._executedCode\n        // but for performance reason, the diff status is stored in a boolean.\n        return this._isDirty;\n    }\n    /**\n     * Set whether the cell is dirty or not.\n     */\n    _setDirty(v) {\n        if (v !== this._isDirty) {\n            if (!v) {\n                this._executedCode = this.value.text.trim();\n            }\n            this._isDirty = v;\n            this.stateChanged.emit({\n                name: 'isDirty',\n                oldValue: !v,\n                newValue: v\n            });\n        }\n    }\n    clearExecution() {\n        this.outputs.clear();\n        this.executionCount = null;\n        this._setDirty(false);\n        this.metadata.delete('execution');\n    }\n    /**\n     * The cell outputs.\n     */\n    get outputs() {\n        return this._outputs;\n    }\n    /**\n     * Dispose of the resources held by the model.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._outputs.dispose();\n        this._outputs = null;\n        super.dispose();\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const cell = super.toJSON();\n        cell.execution_count = this.executionCount || null;\n        cell.outputs = this.outputs.toJSON();\n        cell.id = this.id;\n        return cell;\n    }\n    /**\n     * Handle a change to the trusted state.\n     */\n    onTrustedChanged(trusted, args) {\n        if (this._outputs) {\n            this._outputs.trusted = args.newValue;\n        }\n        this.stateChanged.emit({\n            name: 'trusted',\n            oldValue: args.oldValue,\n            newValue: args.newValue\n        });\n    }\n    /**\n     * Handle a change to the cell outputs modelDB and reflect it in the shared model.\n     */\n    onModelDBOutputsChange(sender, event) {\n        const codeCell = this.sharedModel;\n        globalModelDBMutex(() => {\n            switch (event.type) {\n                case 'add': {\n                    const outputs = event.newValues.map(output => output.toJSON());\n                    codeCell.updateOutputs(event.newIndex, event.newIndex + outputs.length, outputs);\n                    break;\n                }\n                case 'set': {\n                    const newValues = event.newValues.map(output => output.toJSON());\n                    codeCell.updateOutputs(event.oldIndex, event.oldValues.length, newValues);\n                    break;\n                }\n                case 'remove':\n                    codeCell.updateOutputs(event.oldIndex, event.oldValues.length);\n                    break;\n                default:\n                    throw new Error(`Invalid event type: ${event.type}`);\n            }\n        });\n    }\n    /**\n     * Handle a change to the code cell value.\n     */\n    _onValueChanged() {\n        if (this.executionCount !== null) {\n            this._setDirty(this._executedCode !== this.value.text.trim());\n        }\n    }\n    /**\n     * Handle a change to the output shared model and reflect it in modelDB.\n     * We update the modeldb metadata when the nbcell changes.\n     *\n     * This method overrides the CellModel protected _onSharedModelChanged\n     * so we first call super._onSharedModelChanged\n     *\n     * @override CellModel._onSharedModelChanged\n     */\n    _onSharedModelChanged(sender, change) {\n        super._onSharedModelChanged(sender, change);\n        globalModelDBMutex(() => {\n            if (change.outputsChange) {\n                this.clearExecution();\n                sender.getOutputs().forEach(output => this._outputs.add(output));\n            }\n            if (change.executionCountChange) {\n                this.executionCount = change.executionCountChange.newValue\n                    ? change.executionCountChange.newValue\n                    : null;\n            }\n        });\n    }\n    /**\n     * Handle a change to the execution count.\n     */\n    _onExecutionCountChanged(count, args) {\n        const codeCell = this.sharedModel;\n        globalModelDBMutex(() => {\n            codeCell.execution_count = args.newValue\n                ? args.newValue\n                : null;\n        });\n        this.contentChanged.emit(void 0);\n        this.stateChanged.emit({\n            name: 'executionCount',\n            oldValue: args.oldValue,\n            newValue: args.newValue\n        });\n        if (args.newValue && this.isDirty) {\n            this._setDirty(false);\n        }\n    }\n}\n/**\n * The namespace for `CodeCellModel` statics.\n */\n(function (CodeCellModel) {\n    /**\n     * The default implementation of an `IContentFactory`.\n     */\n    class ContentFactory {\n        /**\n         * Create an output area.\n         */\n        createOutputArea(options) {\n            return new OutputAreaModel(options);\n        }\n    }\n    CodeCellModel.ContentFactory = ContentFactory;\n    /**\n     * The shared `ContentFactory` instance.\n     */\n    CodeCellModel.defaultContentFactory = new ContentFactory();\n})(CodeCellModel || (CodeCellModel = {}));\nvar Private;\n(function (Private) {\n    function collapseChanged(metadata, args) {\n        if (args.key === 'collapsed') {\n            const jupyter = (metadata.get('jupyter') || {});\n            const { outputs_hidden } = jupyter, newJupyter = __rest(jupyter, [\"outputs_hidden\"]);\n            if (outputs_hidden !== args.newValue) {\n                if (args.newValue !== undefined) {\n                    newJupyter['outputs_hidden'] = args.newValue;\n                }\n                if (Object.keys(newJupyter).length === 0) {\n                    metadata.delete('jupyter');\n                }\n                else {\n                    metadata.set('jupyter', newJupyter);\n                }\n            }\n        }\n        else if (args.key === 'jupyter') {\n            const jupyter = (args.newValue || {});\n            if (jupyter.hasOwnProperty('outputs_hidden')) {\n                metadata.set('collapsed', jupyter.outputs_hidden);\n            }\n            else {\n                metadata.delete('collapsed');\n            }\n        }\n    }\n    Private.collapseChanged = collapseChanged;\n})(Private || (Private = {}));\n//# sourceMappingURL=model.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport * as React from 'react';\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport { ellipsesIcon } from '@jupyterlab/ui-components';\n/**\n * The CSS class added to placeholders.\n */\nconst PLACEHOLDER_CLASS = 'jp-Placeholder';\n/**\n * The CSS classes added to input placeholder prompts.\n */\nconst INPUT_PROMPT_CLASS = 'jp-Placeholder-prompt jp-InputPrompt';\n/**\n * The CSS classes added to output placeholder prompts.\n */\nconst OUTPUT_PROMPT_CLASS = 'jp-Placeholder-prompt jp-OutputPrompt';\n/**\n * The CSS class added to placeholder content.\n */\nconst CONTENT_CLASS = 'jp-Placeholder-content';\n/**\n * The CSS class added to input placeholders.\n */\nconst INPUT_PLACEHOLDER_CLASS = 'jp-InputPlaceholder';\n/**\n * The CSS class added to output placeholders.\n */\nconst OUTPUT_PLACEHOLDER_CLASS = 'jp-OutputPlaceholder';\n/**\n * An abstract base class for placeholders\n *\n * ### Notes\n * A placeholder is the element that is shown when input/output\n * is hidden.\n */\nexport class Placeholder extends ReactWidget {\n    /**\n     * Construct a new placeholder.\n     */\n    constructor(callback) {\n        super();\n        this.addClass(PLACEHOLDER_CLASS);\n        this._callback = callback;\n    }\n    /**\n     * Handle the click event.\n     */\n    handleClick(e) {\n        const callback = this._callback;\n        callback(e);\n    }\n}\n/**\n * The input placeholder class.\n */\nexport class InputPlaceholder extends Placeholder {\n    /**\n     * Construct a new input placeholder.\n     */\n    constructor(callback) {\n        super(callback);\n        this.addClass(INPUT_PLACEHOLDER_CLASS);\n    }\n    /**\n     * Render the input placeholder using the virtual DOM.\n     */\n    render() {\n        return [\n            React.createElement(\"div\", { className: INPUT_PROMPT_CLASS, key: \"input\" }),\n            React.createElement(\"div\", { className: CONTENT_CLASS, onClick: e => this.handleClick(e), key: \"content\" },\n                React.createElement(ellipsesIcon.react, { className: \"jp-MoreHorizIcon\", elementPosition: \"center\", height: \"auto\", width: \"32px\" }))\n        ];\n    }\n}\n/**\n * The output placeholder class.\n */\nexport class OutputPlaceholder extends Placeholder {\n    /**\n     * Construct a new output placeholder.\n     */\n    constructor(callback) {\n        super(callback);\n        this.addClass(OUTPUT_PLACEHOLDER_CLASS);\n    }\n    /**\n     * Render the output placeholder using the virtual DOM.\n     */\n    render() {\n        return [\n            React.createElement(\"div\", { className: OUTPUT_PROMPT_CLASS, key: \"output\" }),\n            React.createElement(\"div\", { className: CONTENT_CLASS, onClick: e => this.handleClick(e), key: \"content\" },\n                React.createElement(ellipsesIcon.react, { className: \"jp-MoreHorizIcon\", elementPosition: \"center\", height: \"auto\", width: \"32px\" }))\n        ];\n    }\n}\n//# sourceMappingURL=placeholder.js.map","import { Widget } from '@lumino/widgets';\nconst RESIZE_HANDLE_CLASS = 'jp-CellResizeHandle';\nconst CELL_RESIZED_CLASS = 'jp-mod-resizedCell';\n/**\n * A handle that allows to change input/output proportions in side-by-side mode.\n */\nexport class ResizeHandle extends Widget {\n    constructor(targetNode) {\n        super();\n        this.targetNode = targetNode;\n        this._isActive = false;\n        this._isDragging = false;\n        this._protectedWidth = 10;\n        this.addClass(RESIZE_HANDLE_CLASS);\n    }\n    onAfterAttach(msg) {\n        super.onAfterAttach(msg);\n        this.node.addEventListener('dblclick', this);\n        this.node.addEventListener('mousedown', this);\n    }\n    onAfterDetach(msg) {\n        super.onAfterAttach(msg);\n        this.node.removeEventListener('dblclick', this);\n        this.node.removeEventListener('mousedown', this);\n    }\n    /**\n     * Handle the DOM events for the widget.\n     *\n     * @param event - The DOM event sent to the widget.\n     *\n     */\n    handleEvent(event) {\n        var _a, _b;\n        switch (event.type) {\n            case 'dblclick':\n                (_a = this.targetNode.parentNode) === null || _a === void 0 ? void 0 : _a.childNodes.forEach(node => {\n                    node.classList.remove(CELL_RESIZED_CLASS);\n                });\n                document.documentElement.style.setProperty('--jp-side-by-side-resized-cell', '');\n                this._isActive = false;\n                break;\n            case 'mousedown':\n                this._mouseOffset =\n                    event.clientX - this.node.getBoundingClientRect().x;\n                this._isDragging = true;\n                if (!this._isActive) {\n                    (_b = this.targetNode.parentNode) === null || _b === void 0 ? void 0 : _b.childNodes.forEach(node => {\n                        node.classList.add(CELL_RESIZED_CLASS);\n                    });\n                    this._isActive = true;\n                }\n                window.addEventListener('mousemove', this);\n                window.addEventListener('mouseup', this);\n                break;\n            case 'mousemove': {\n                if (!this._isActive || !this._isDragging) {\n                    return;\n                }\n                const targetRect = this.targetNode.getBoundingClientRect();\n                const inputWidth = event.clientX - targetRect.x - this._mouseOffset;\n                const resized_ratio = 1 -\n                    Math.min(Math.max(inputWidth, this._protectedWidth), targetRect.width - this._protectedWidth) /\n                        (targetRect.width - this._protectedWidth);\n                // Added friction to the dragging interaction\n                if (Math.round(resized_ratio * 100) % 10 == 0) {\n                    document.documentElement.style.setProperty('--jp-side-by-side-resized-cell', resized_ratio + 'fr');\n                }\n                break;\n            }\n            case 'mouseup':\n                this._isDragging = false;\n                window.removeEventListener('mousemove', this);\n                window.removeEventListener('mouseup', this);\n                break;\n            default:\n                break;\n        }\n    }\n}\n//# sourceMappingURL=resizeHandle.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport marked from 'marked';\nimport { AttachmentsResolver } from '@jupyterlab/attachments';\nimport { ActivityMonitor, URLExt } from '@jupyterlab/coreutils';\nimport { OutputArea, OutputPrompt, SimplifiedOutputArea, Stdin } from '@jupyterlab/outputarea';\nimport { imageRendererFactory, MimeModel } from '@jupyterlab/rendermime';\nimport { PromiseDelegate, UUID } from '@lumino/coreutils';\nimport { filter, some, toArray } from '@lumino/algorithm';\nimport { Panel, PanelLayout, Widget } from '@lumino/widgets';\nimport { InputCollapser, OutputCollapser } from './collapser';\nimport { CellFooter, CellHeader } from './headerfooter';\nimport { InputArea, InputPrompt } from './inputarea';\nimport { InputPlaceholder, OutputPlaceholder } from './placeholder';\nimport { ResizeHandle } from './resizeHandle';\nimport { Signal } from '@lumino/signaling';\nimport { addIcon } from '@jupyterlab/ui-components';\n/**\n * The CSS class added to cell widgets.\n */\nconst CELL_CLASS = 'jp-Cell';\n/**\n * The CSS class added to the cell header.\n */\nconst CELL_HEADER_CLASS = 'jp-Cell-header';\n/**\n * The CSS class added to the cell footer.\n */\nconst CELL_FOOTER_CLASS = 'jp-Cell-footer';\n/**\n * The CSS class added to the cell input wrapper.\n */\nconst CELL_INPUT_WRAPPER_CLASS = 'jp-Cell-inputWrapper';\n/**\n * The CSS class added to the cell output wrapper.\n */\nconst CELL_OUTPUT_WRAPPER_CLASS = 'jp-Cell-outputWrapper';\n/**\n * The CSS class added to the cell input area.\n */\nconst CELL_INPUT_AREA_CLASS = 'jp-Cell-inputArea';\n/**\n * The CSS class added to the cell output area.\n */\nconst CELL_OUTPUT_AREA_CLASS = 'jp-Cell-outputArea';\n/**\n * The CSS class added to the cell input collapser.\n */\nconst CELL_INPUT_COLLAPSER_CLASS = 'jp-Cell-inputCollapser';\n/**\n * The CSS class added to the cell output collapser.\n */\nconst CELL_OUTPUT_COLLAPSER_CLASS = 'jp-Cell-outputCollapser';\n/**\n * The class name added to the cell when readonly.\n */\nconst READONLY_CLASS = 'jp-mod-readOnly';\n/**\n * The class name added to the cell when dirty.\n */\nconst DIRTY_CLASS = 'jp-mod-dirty';\n/**\n * The class name added to code cells.\n */\nconst CODE_CELL_CLASS = 'jp-CodeCell';\n/**\n * The class name added to markdown cells.\n */\nconst MARKDOWN_CELL_CLASS = 'jp-MarkdownCell';\n/**\n * The class name added to rendered markdown output widgets.\n */\nconst MARKDOWN_OUTPUT_CLASS = 'jp-MarkdownOutput';\nexport const MARKDOWN_HEADING_COLLAPSED = 'jp-MarkdownHeadingCollapsed';\nconst HEADING_COLLAPSER_CLASS = 'jp-collapseHeadingButton';\nconst SHOW_HIDDEN_CELLS_CLASS = 'jp-showHiddenCellsButton';\n/**\n * The class name added to raw cells.\n */\nconst RAW_CELL_CLASS = 'jp-RawCell';\n/**\n * The class name added to a rendered input area.\n */\nconst RENDERED_CLASS = 'jp-mod-rendered';\nconst NO_OUTPUTS_CLASS = 'jp-mod-noOutputs';\n/**\n * The text applied to an empty markdown cell.\n */\nconst DEFAULT_MARKDOWN_TEXT = 'Type Markdown and LaTeX: $ α^2 $';\n/**\n * The timeout to wait for change activity to have ceased before rendering.\n */\nconst RENDER_TIMEOUT = 1000;\n/**\n * The mime type for a rich contents drag object.\n */\nconst CONTENTS_MIME_RICH = 'application/x-jupyter-icontentsrich';\n/** ****************************************************************************\n * Cell\n ******************************************************************************/\n/**\n * A base cell widget.\n */\nexport class Cell extends Widget {\n    /**\n     * Construct a new base cell widget.\n     */\n    constructor(options) {\n        super();\n        this._readOnly = false;\n        this._inputHidden = false;\n        this._syncCollapse = false;\n        this._syncEditable = false;\n        this.addClass(CELL_CLASS);\n        const model = (this._model = options.model);\n        const contentFactory = (this.contentFactory =\n            options.contentFactory || Cell.defaultContentFactory);\n        this.layout = new PanelLayout();\n        // Header\n        const header = contentFactory.createCellHeader();\n        header.addClass(CELL_HEADER_CLASS);\n        this.layout.addWidget(header);\n        // Input\n        const inputWrapper = (this._inputWrapper = new Panel());\n        inputWrapper.addClass(CELL_INPUT_WRAPPER_CLASS);\n        const inputCollapser = new InputCollapser();\n        inputCollapser.addClass(CELL_INPUT_COLLAPSER_CLASS);\n        const input = (this._input = new InputArea({\n            model,\n            contentFactory,\n            updateOnShow: options.updateEditorOnShow,\n            placeholder: options.placeholder\n        }));\n        input.addClass(CELL_INPUT_AREA_CLASS);\n        inputWrapper.addWidget(inputCollapser);\n        inputWrapper.addWidget(input);\n        this.layout.addWidget(inputWrapper);\n        this._inputPlaceholder = new InputPlaceholder(() => {\n            this.inputHidden = !this.inputHidden;\n        });\n        // Footer\n        const footer = this.contentFactory.createCellFooter();\n        footer.addClass(CELL_FOOTER_CLASS);\n        this.layout.addWidget(footer);\n        // Editor settings\n        if (options.editorConfig) {\n            let editorOptions = {};\n            Object.keys(options.editorConfig).forEach((key) => {\n                var _a, _b;\n                editorOptions[key] = (_b = (_a = options.editorConfig) === null || _a === void 0 ? void 0 : _a[key]) !== null && _b !== void 0 ? _b : null;\n            });\n            this.editor.setOptions(editorOptions);\n        }\n        model.metadata.changed.connect(this.onMetadataChanged, this);\n    }\n    /**\n     * Initialize view state from model.\n     *\n     * #### Notes\n     * Should be called after construction. For convenience, returns this, so it\n     * can be chained in the construction, like `new Foo().initializeState();`\n     */\n    initializeState() {\n        this.loadCollapseState();\n        this.loadEditableState();\n        return this;\n    }\n    /**\n     * Get the prompt node used by the cell.\n     */\n    get promptNode() {\n        if (!this._inputHidden) {\n            return this._input.promptNode;\n        }\n        else {\n            return this._inputPlaceholder.node\n                .firstElementChild;\n        }\n    }\n    /**\n     * Get the CodeEditorWrapper used by the cell.\n     */\n    get editorWidget() {\n        return this._input.editorWidget;\n    }\n    /**\n     * Get the CodeEditor used by the cell.\n     */\n    get editor() {\n        return this._input.editor;\n    }\n    /**\n     * Get the model used by the cell.\n     */\n    get model() {\n        return this._model;\n    }\n    /**\n     * Get the input area for the cell.\n     */\n    get inputArea() {\n        return this._input;\n    }\n    /**\n     * The read only state of the cell.\n     */\n    get readOnly() {\n        return this._readOnly;\n    }\n    set readOnly(value) {\n        if (value === this._readOnly) {\n            return;\n        }\n        this._readOnly = value;\n        if (this.syncEditable) {\n            this.saveEditableState();\n        }\n        this.update();\n    }\n    /**\n     * Save view editable state to model\n     */\n    saveEditableState() {\n        const { metadata } = this.model;\n        const current = metadata.get('editable');\n        if ((this.readOnly && current === false) ||\n            (!this.readOnly && current === undefined)) {\n            return;\n        }\n        if (this.readOnly) {\n            this.model.metadata.set('editable', false);\n        }\n        else {\n            this.model.metadata.delete('editable');\n        }\n    }\n    /**\n     * Load view editable state from model.\n     */\n    loadEditableState() {\n        this.readOnly = this.model.metadata.get('editable') === false;\n    }\n    /**\n     * A promise that resolves when the widget renders for the first time.\n     */\n    get ready() {\n        return Promise.resolve(undefined);\n    }\n    /**\n     * Set the prompt for the widget.\n     */\n    setPrompt(value) {\n        this._input.setPrompt(value);\n    }\n    /**\n     * The view state of input being hidden.\n     */\n    get inputHidden() {\n        return this._inputHidden;\n    }\n    set inputHidden(value) {\n        if (this._inputHidden === value) {\n            return;\n        }\n        const layout = this._inputWrapper.layout;\n        if (value) {\n            this._input.parent = null;\n            layout.addWidget(this._inputPlaceholder);\n        }\n        else {\n            this._inputPlaceholder.parent = null;\n            layout.addWidget(this._input);\n        }\n        this._inputHidden = value;\n        if (this.syncCollapse) {\n            this.saveCollapseState();\n        }\n        this.handleInputHidden(value);\n    }\n    /**\n     * Save view collapse state to model\n     */\n    saveCollapseState() {\n        const jupyter = Object.assign({}, this.model.metadata.get('jupyter'));\n        if ((this.inputHidden && jupyter.source_hidden === true) ||\n            (!this.inputHidden && jupyter.source_hidden === undefined)) {\n            return;\n        }\n        if (this.inputHidden) {\n            jupyter.source_hidden = true;\n        }\n        else {\n            delete jupyter.source_hidden;\n        }\n        if (Object.keys(jupyter).length === 0) {\n            this.model.metadata.delete('jupyter');\n        }\n        else {\n            this.model.metadata.set('jupyter', jupyter);\n        }\n    }\n    /**\n     * Revert view collapse state from model.\n     */\n    loadCollapseState() {\n        const jupyter = this.model.metadata.get('jupyter') || {};\n        this.inputHidden = !!jupyter.source_hidden;\n    }\n    /**\n     * Handle the input being hidden.\n     *\n     * #### Notes\n     * This is called by the `inputHidden` setter so that subclasses\n     * can perform actions upon the input being hidden without accessing\n     * private state.\n     */\n    handleInputHidden(value) {\n        return;\n    }\n    /**\n     * Whether to sync the collapse state to the cell model.\n     */\n    get syncCollapse() {\n        return this._syncCollapse;\n    }\n    set syncCollapse(value) {\n        if (this._syncCollapse === value) {\n            return;\n        }\n        this._syncCollapse = value;\n        if (value) {\n            this.loadCollapseState();\n        }\n    }\n    /**\n     * Whether to sync the editable state to the cell model.\n     */\n    get syncEditable() {\n        return this._syncEditable;\n    }\n    set syncEditable(value) {\n        if (this._syncEditable === value) {\n            return;\n        }\n        this._syncEditable = value;\n        if (value) {\n            this.loadEditableState();\n        }\n    }\n    /**\n     * Clone the cell, using the same model.\n     */\n    clone() {\n        const constructor = this.constructor;\n        return new constructor({\n            model: this.model,\n            contentFactory: this.contentFactory,\n            placeholder: false\n        });\n    }\n    /**\n     * Dispose of the resources held by the widget.\n     */\n    dispose() {\n        // Do nothing if already disposed.\n        if (this.isDisposed) {\n            return;\n        }\n        this._input = null;\n        this._model = null;\n        this._inputWrapper = null;\n        this._inputPlaceholder = null;\n        super.dispose();\n    }\n    /**\n     * Handle `after-attach` messages.\n     */\n    onAfterAttach(msg) {\n        this.update();\n    }\n    /**\n     * Handle `'activate-request'` messages.\n     */\n    onActivateRequest(msg) {\n        this.editor.focus();\n    }\n    /**\n     * Handle `fit-request` messages.\n     */\n    onFitRequest(msg) {\n        // need this for for when a theme changes font size\n        this.editor.refresh();\n    }\n    /**\n     * Handle `update-request` messages.\n     */\n    onUpdateRequest(msg) {\n        if (!this._model) {\n            return;\n        }\n        // Handle read only state.\n        if (this.editor.getOption('readOnly') !== this._readOnly) {\n            this.editor.setOption('readOnly', this._readOnly);\n            this.toggleClass(READONLY_CLASS, this._readOnly);\n        }\n    }\n    /**\n     * Handle changes in the metadata.\n     */\n    onMetadataChanged(model, args) {\n        switch (args.key) {\n            case 'jupyter':\n                if (this.syncCollapse) {\n                    this.loadCollapseState();\n                }\n                break;\n            case 'editable':\n                if (this.syncEditable) {\n                    this.loadEditableState();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\n/**\n * The namespace for the `Cell` class statics.\n */\n(function (Cell) {\n    /**\n     * The default implementation of an `IContentFactory`.\n     *\n     * This includes a CodeMirror editor factory to make it easy to use out of the box.\n     */\n    class ContentFactory {\n        /**\n         * Create a content factory for a cell.\n         */\n        constructor(options = {}) {\n            this._editorFactory =\n                options.editorFactory || InputArea.defaultEditorFactory;\n        }\n        /**\n         * The readonly editor factory that create code editors\n         */\n        get editorFactory() {\n            return this._editorFactory;\n        }\n        /**\n         * Create a new cell header for the parent widget.\n         */\n        createCellHeader() {\n            return new CellHeader();\n        }\n        /**\n         * Create a new cell header for the parent widget.\n         */\n        createCellFooter() {\n            return new CellFooter();\n        }\n        /**\n         * Create an input prompt.\n         */\n        createInputPrompt() {\n            return new InputPrompt();\n        }\n        /**\n         * Create the output prompt for the widget.\n         */\n        createOutputPrompt() {\n            return new OutputPrompt();\n        }\n        /**\n         * Create an stdin widget.\n         */\n        createStdin(options) {\n            return new Stdin(options);\n        }\n    }\n    Cell.ContentFactory = ContentFactory;\n    /**\n     * The default content factory for cells.\n     */\n    Cell.defaultContentFactory = new ContentFactory();\n})(Cell || (Cell = {}));\n/** ****************************************************************************\n * CodeCell\n ******************************************************************************/\n/**\n * A widget for a code cell.\n */\nexport class CodeCell extends Cell {\n    /**\n     * Construct a code cell widget.\n     */\n    constructor(options) {\n        super(options);\n        this._outputHidden = false;\n        this._syncScrolled = false;\n        this._savingMetadata = false;\n        this.addClass(CODE_CELL_CLASS);\n        // Only save options not handled by parent constructor.\n        const rendermime = (this._rendermime = options.rendermime);\n        const contentFactory = this.contentFactory;\n        const model = this.model;\n        if (!options.placeholder) {\n            // Insert the output before the cell footer.\n            const outputWrapper = (this._outputWrapper = new Panel());\n            outputWrapper.addClass(CELL_OUTPUT_WRAPPER_CLASS);\n            const outputCollapser = new OutputCollapser();\n            outputCollapser.addClass(CELL_OUTPUT_COLLAPSER_CLASS);\n            const output = (this._output = new OutputArea({\n                model: model.outputs,\n                rendermime,\n                contentFactory: contentFactory,\n                maxNumberOutputs: options.maxNumberOutputs\n            }));\n            output.addClass(CELL_OUTPUT_AREA_CLASS);\n            // Set a CSS if there are no outputs, and connect a signal for future\n            // changes to the number of outputs. This is for conditional styling\n            // if there are no outputs.\n            if (model.outputs.length === 0) {\n                this.addClass(NO_OUTPUTS_CLASS);\n            }\n            output.outputLengthChanged.connect(this._outputLengthHandler, this);\n            outputWrapper.addWidget(outputCollapser);\n            outputWrapper.addWidget(output);\n            this.layout.insertWidget(2, new ResizeHandle(this.node));\n            this.layout.insertWidget(3, outputWrapper);\n            if (model.isDirty) {\n                this.addClass(DIRTY_CLASS);\n            }\n            this._outputPlaceholder = new OutputPlaceholder(() => {\n                this.outputHidden = !this.outputHidden;\n            });\n        }\n        model.stateChanged.connect(this.onStateChanged, this);\n    }\n    /**\n     * Initialize view state from model.\n     *\n     * #### Notes\n     * Should be called after construction. For convenience, returns this, so it\n     * can be chained in the construction, like `new Foo().initializeState();`\n     */\n    initializeState() {\n        super.initializeState();\n        this.loadScrolledState();\n        this.setPrompt(`${this.model.executionCount || ''}`);\n        return this;\n    }\n    /**\n     * Get the output area for the cell.\n     */\n    get outputArea() {\n        return this._output;\n    }\n    /**\n     * The view state of output being collapsed.\n     */\n    get outputHidden() {\n        return this._outputHidden;\n    }\n    set outputHidden(value) {\n        if (this._outputHidden === value) {\n            return;\n        }\n        const layout = this._outputWrapper.layout;\n        if (value) {\n            layout.removeWidget(this._output);\n            layout.addWidget(this._outputPlaceholder);\n            if (this.inputHidden && !this._outputWrapper.isHidden) {\n                this._outputWrapper.hide();\n            }\n        }\n        else {\n            if (this._outputWrapper.isHidden) {\n                this._outputWrapper.show();\n            }\n            layout.removeWidget(this._outputPlaceholder);\n            layout.addWidget(this._output);\n        }\n        this._outputHidden = value;\n        if (this.syncCollapse) {\n            this.saveCollapseState();\n        }\n    }\n    /**\n     * Save view collapse state to model\n     */\n    saveCollapseState() {\n        // Because collapse state for a code cell involves two different pieces of\n        // metadata (the `collapsed` and `jupyter` metadata keys), we block reacting\n        // to changes in metadata until we have fully committed our changes.\n        // Otherwise setting one key can trigger a write to the other key to\n        // maintain the synced consistency.\n        this._savingMetadata = true;\n        try {\n            super.saveCollapseState();\n            const metadata = this.model.metadata;\n            const collapsed = this.model.metadata.get('collapsed');\n            if ((this.outputHidden && collapsed === true) ||\n                (!this.outputHidden && collapsed === undefined)) {\n                return;\n            }\n            // Do not set jupyter.outputs_hidden since it is redundant. See\n            // and https://github.com/jupyter/nbformat/issues/137\n            if (this.outputHidden) {\n                metadata.set('collapsed', true);\n            }\n            else {\n                metadata.delete('collapsed');\n            }\n        }\n        finally {\n            this._savingMetadata = false;\n        }\n    }\n    /**\n     * Revert view collapse state from model.\n     *\n     * We consider the `collapsed` metadata key as the source of truth for outputs\n     * being hidden.\n     */\n    loadCollapseState() {\n        super.loadCollapseState();\n        this.outputHidden = !!this.model.metadata.get('collapsed');\n    }\n    /**\n     * Whether the output is in a scrolled state?\n     */\n    get outputsScrolled() {\n        return this._outputsScrolled;\n    }\n    set outputsScrolled(value) {\n        this.toggleClass('jp-mod-outputsScrolled', value);\n        this._outputsScrolled = value;\n        if (this.syncScrolled) {\n            this.saveScrolledState();\n        }\n    }\n    /**\n     * Save view collapse state to model\n     */\n    saveScrolledState() {\n        const { metadata } = this.model;\n        const current = metadata.get('scrolled');\n        if ((this.outputsScrolled && current === true) ||\n            (!this.outputsScrolled && current === undefined)) {\n            return;\n        }\n        if (this.outputsScrolled) {\n            metadata.set('scrolled', true);\n        }\n        else {\n            metadata.delete('scrolled');\n        }\n    }\n    /**\n     * Revert view collapse state from model.\n     */\n    loadScrolledState() {\n        const metadata = this.model.metadata;\n        // We don't have the notion of 'auto' scrolled, so we make it false.\n        if (metadata.get('scrolled') === 'auto') {\n            this.outputsScrolled = false;\n        }\n        else {\n            this.outputsScrolled = !!metadata.get('scrolled');\n        }\n    }\n    /**\n     * Whether to sync the scrolled state to the cell model.\n     */\n    get syncScrolled() {\n        return this._syncScrolled;\n    }\n    set syncScrolled(value) {\n        if (this._syncScrolled === value) {\n            return;\n        }\n        this._syncScrolled = value;\n        if (value) {\n            this.loadScrolledState();\n        }\n    }\n    /**\n     * Handle the input being hidden.\n     *\n     * #### Notes\n     * This method is called by the case cell implementation and is\n     * subclasses here so the code cell can watch to see when input\n     * is hidden without accessing private state.\n     */\n    handleInputHidden(value) {\n        if (!value && this._outputWrapper.isHidden) {\n            this._outputWrapper.show();\n        }\n        else if (value && !this._outputWrapper.isHidden && this._outputHidden) {\n            this._outputWrapper.hide();\n        }\n    }\n    /**\n     * Clone the cell, using the same model.\n     */\n    clone() {\n        const constructor = this.constructor;\n        return new constructor({\n            model: this.model,\n            contentFactory: this.contentFactory,\n            rendermime: this._rendermime,\n            placeholder: false\n        });\n    }\n    /**\n     * Clone the OutputArea alone, returning a simplified output area, using the same model.\n     */\n    cloneOutputArea() {\n        return new SimplifiedOutputArea({\n            model: this.model.outputs,\n            contentFactory: this.contentFactory,\n            rendermime: this._rendermime\n        });\n    }\n    /**\n     * Dispose of the resources used by the widget.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._output.outputLengthChanged.disconnect(this._outputLengthHandler, this);\n        this._rendermime = null;\n        this._output = null;\n        this._outputWrapper = null;\n        this._outputPlaceholder = null;\n        super.dispose();\n    }\n    /**\n     * Handle changes in the model.\n     */\n    onStateChanged(model, args) {\n        switch (args.name) {\n            case 'executionCount':\n                this.setPrompt(`${model.executionCount || ''}`);\n                break;\n            case 'isDirty':\n                if (model.isDirty) {\n                    this.addClass(DIRTY_CLASS);\n                }\n                else {\n                    this.removeClass(DIRTY_CLASS);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * Handle changes in the metadata.\n     */\n    onMetadataChanged(model, args) {\n        if (this._savingMetadata) {\n            // We are in middle of a metadata transaction, so don't react to it.\n            return;\n        }\n        switch (args.key) {\n            case 'scrolled':\n                if (this.syncScrolled) {\n                    this.loadScrolledState();\n                }\n                break;\n            case 'collapsed':\n                if (this.syncCollapse) {\n                    this.loadCollapseState();\n                }\n                break;\n            default:\n                break;\n        }\n        super.onMetadataChanged(model, args);\n    }\n    /**\n     * Handle changes in the number of outputs in the output area.\n     */\n    _outputLengthHandler(sender, args) {\n        const force = args === 0 ? true : false;\n        this.toggleClass(NO_OUTPUTS_CLASS, force);\n    }\n}\n/**\n * The namespace for the `CodeCell` class statics.\n */\n(function (CodeCell) {\n    /**\n     * Execute a cell given a client session.\n     */\n    async function execute(cell, sessionContext, metadata) {\n        var _a;\n        const model = cell.model;\n        const code = model.value.text;\n        if (!code.trim() || !((_a = sessionContext.session) === null || _a === void 0 ? void 0 : _a.kernel)) {\n            model.clearExecution();\n            return;\n        }\n        const cellId = { cellId: model.id };\n        metadata = Object.assign(Object.assign(Object.assign({}, model.metadata.toJSON()), metadata), cellId);\n        const { recordTiming } = metadata;\n        model.clearExecution();\n        cell.outputHidden = false;\n        cell.setPrompt('*');\n        model.trusted = true;\n        let future;\n        try {\n            const msgPromise = OutputArea.execute(code, cell.outputArea, sessionContext, metadata);\n            // cell.outputArea.future assigned synchronously in `execute`\n            if (recordTiming) {\n                const recordTimingHook = (msg) => {\n                    let label;\n                    switch (msg.header.msg_type) {\n                        case 'status':\n                            label = `status.${msg.content.execution_state}`;\n                            break;\n                        case 'execute_input':\n                            label = 'execute_input';\n                            break;\n                        default:\n                            return true;\n                    }\n                    // If the data is missing, estimate it to now\n                    // Date was added in 5.1: https://jupyter-client.readthedocs.io/en/stable/messaging.html#message-header\n                    const value = msg.header.date || new Date().toISOString();\n                    const timingInfo = Object.assign({}, model.metadata.get('execution'));\n                    timingInfo[`iopub.${label}`] = value;\n                    model.metadata.set('execution', timingInfo);\n                    return true;\n                };\n                cell.outputArea.future.registerMessageHook(recordTimingHook);\n            }\n            else {\n                model.metadata.delete('execution');\n            }\n            // Save this execution's future so we can compare in the catch below.\n            future = cell.outputArea.future;\n            const msg = (await msgPromise);\n            model.executionCount = msg.content.execution_count;\n            if (recordTiming) {\n                const timingInfo = Object.assign({}, model.metadata.get('execution'));\n                const started = msg.metadata.started;\n                // Started is not in the API, but metadata IPyKernel sends\n                if (started) {\n                    timingInfo['shell.execute_reply.started'] = started;\n                }\n                // Per above, the 5.0 spec does not assume date, so we estimate is required\n                const finished = msg.header.date;\n                timingInfo['shell.execute_reply'] =\n                    finished || new Date().toISOString();\n                model.metadata.set('execution', timingInfo);\n            }\n            return msg;\n        }\n        catch (e) {\n            // If we started executing, and the cell is still indicating this\n            // execution, clear the prompt.\n            if (future && !cell.isDisposed && cell.outputArea.future === future) {\n                cell.setPrompt('');\n            }\n            throw e;\n        }\n    }\n    CodeCell.execute = execute;\n})(CodeCell || (CodeCell = {}));\n/**\n * `AttachmentsCell` - A base class for a cell widget that allows\n *  attachments to be drag/drop'd or pasted onto it\n */\nexport class AttachmentsCell extends Cell {\n    /**\n     * Handle the DOM events for the widget.\n     *\n     * @param event - The DOM event sent to the widget.\n     *\n     * #### Notes\n     * This method implements the DOM `EventListener` interface and is\n     * called in response to events on the notebook panel's node. It should\n     * not be called directly by user code.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'paste':\n                this._evtPaste(event);\n                break;\n            case 'dragenter':\n                event.preventDefault();\n                break;\n            case 'dragover':\n                event.preventDefault();\n                break;\n            case 'drop':\n                this._evtNativeDrop(event);\n                break;\n            case 'lm-dragover':\n                this._evtDragOver(event);\n                break;\n            case 'lm-drop':\n                this._evtDrop(event);\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * Handle `after-attach` messages for the widget.\n     */\n    onAfterAttach(msg) {\n        super.onAfterAttach(msg);\n        const node = this.node;\n        node.addEventListener('lm-dragover', this);\n        node.addEventListener('lm-drop', this);\n        node.addEventListener('dragenter', this);\n        node.addEventListener('dragover', this);\n        node.addEventListener('drop', this);\n        node.addEventListener('paste', this);\n    }\n    /**\n     * A message handler invoked on a `'before-detach'`\n     * message\n     */\n    onBeforeDetach(msg) {\n        const node = this.node;\n        node.removeEventListener('drop', this);\n        node.removeEventListener('dragover', this);\n        node.removeEventListener('dragenter', this);\n        node.removeEventListener('paste', this);\n        node.removeEventListener('lm-dragover', this);\n        node.removeEventListener('lm-drop', this);\n    }\n    _evtDragOver(event) {\n        const supportedMimeType = some(imageRendererFactory.mimeTypes, mimeType => {\n            if (!event.mimeData.hasData(CONTENTS_MIME_RICH)) {\n                return false;\n            }\n            const data = event.mimeData.getData(CONTENTS_MIME_RICH);\n            return data.model.mimetype === mimeType;\n        });\n        if (!supportedMimeType) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        event.dropAction = event.proposedAction;\n    }\n    /**\n     * Handle the `paste` event for the widget\n     */\n    _evtPaste(event) {\n        if (event.clipboardData) {\n            const items = event.clipboardData.items;\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].type === 'text/plain') {\n                    // Skip if this text is the path to a file\n                    if (i < items.length - 1 && items[i + 1].kind === 'file') {\n                        continue;\n                    }\n                    items[i].getAsString(text => {\n                        var _a, _b;\n                        (_b = (_a = this.editor).replaceSelection) === null || _b === void 0 ? void 0 : _b.call(_a, text);\n                    });\n                }\n                this._attachFiles(event.clipboardData.items);\n            }\n        }\n        event.preventDefault();\n    }\n    /**\n     * Handle the `drop` event for the widget\n     */\n    _evtNativeDrop(event) {\n        if (event.dataTransfer) {\n            this._attachFiles(event.dataTransfer.items);\n        }\n        event.preventDefault();\n    }\n    /**\n     * Handle the `'lm-drop'` event for the widget.\n     */\n    _evtDrop(event) {\n        const supportedMimeTypes = toArray(filter(event.mimeData.types(), mimeType => {\n            if (mimeType === CONTENTS_MIME_RICH) {\n                const data = event.mimeData.getData(CONTENTS_MIME_RICH);\n                return (imageRendererFactory.mimeTypes.indexOf(data.model.mimetype) !== -1);\n            }\n            return imageRendererFactory.mimeTypes.indexOf(mimeType) !== -1;\n        }));\n        if (supportedMimeTypes.length === 0) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        if (event.proposedAction === 'none') {\n            event.dropAction = 'none';\n            return;\n        }\n        event.dropAction = 'copy';\n        for (const mimeType of supportedMimeTypes) {\n            if (mimeType === CONTENTS_MIME_RICH) {\n                const { model, withContent } = event.mimeData.getData(CONTENTS_MIME_RICH);\n                if (model.type === 'file') {\n                    const URI = this._generateURI(model.name);\n                    this.updateCellSourceWithAttachment(model.name, URI);\n                    void withContent().then(fullModel => {\n                        this.model.attachments.set(URI, {\n                            [fullModel.mimetype]: fullModel.content\n                        });\n                    });\n                }\n            }\n            else {\n                // Pure mimetype, no useful name to infer\n                const URI = this._generateURI();\n                this.model.attachments.set(URI, {\n                    [mimeType]: event.mimeData.getData(mimeType)\n                });\n                this.updateCellSourceWithAttachment(URI, URI);\n            }\n        }\n    }\n    /**\n     * Attaches all DataTransferItems (obtained from\n     * clipboard or native drop events) to the cell\n     */\n    _attachFiles(items) {\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            if (item.kind === 'file') {\n                const blob = item.getAsFile();\n                if (blob) {\n                    this._attachFile(blob);\n                }\n            }\n        }\n    }\n    /**\n     * Takes in a file object and adds it to\n     * the cell attachments\n     */\n    _attachFile(blob) {\n        const reader = new FileReader();\n        reader.onload = evt => {\n            const { href, protocol } = URLExt.parse(reader.result);\n            if (protocol !== 'data:') {\n                return;\n            }\n            const dataURIRegex = /([\\w+\\/\\+]+)?(?:;(charset=[\\w\\d-]*|base64))?,(.*)/;\n            const matches = dataURIRegex.exec(href);\n            if (!matches || matches.length !== 4) {\n                return;\n            }\n            const mimeType = matches[1];\n            const encodedData = matches[3];\n            const bundle = { [mimeType]: encodedData };\n            const URI = this._generateURI(blob.name);\n            if (mimeType.startsWith('image/')) {\n                this.model.attachments.set(URI, bundle);\n                this.updateCellSourceWithAttachment(blob.name, URI);\n            }\n        };\n        reader.onerror = evt => {\n            console.error(`Failed to attach ${blob.name}` + evt);\n        };\n        reader.readAsDataURL(blob);\n    }\n    /**\n     * Generates a unique URI for a file\n     * while preserving the file extension.\n     */\n    _generateURI(name = '') {\n        const lastIndex = name.lastIndexOf('.');\n        return lastIndex !== -1\n            ? UUID.uuid4().concat(name.substring(lastIndex))\n            : UUID.uuid4();\n    }\n}\n/** ****************************************************************************\n * MarkdownCell\n ******************************************************************************/\n/**\n * A widget for a Markdown cell.\n *\n * #### Notes\n * Things get complicated if we want the rendered text to update\n * any time the text changes, the text editor model changes,\n * or the input area model changes.  We don't support automatically\n * updating the rendered text in all of these cases.\n */\nexport class MarkdownCell extends AttachmentsCell {\n    /**\n     * Construct a Markdown cell widget.\n     */\n    constructor(options) {\n        var _a, _b;\n        super(options);\n        this._toggleCollapsedSignal = new Signal(this);\n        this._renderer = null;\n        this._rendered = true;\n        this._prevText = '';\n        this._ready = new PromiseDelegate();\n        this.addClass(MARKDOWN_CELL_CLASS);\n        // Ensure we can resolve attachments:\n        this._rendermime = options.rendermime.clone({\n            resolver: new AttachmentsResolver({\n                parent: (_a = options.rendermime.resolver) !== null && _a !== void 0 ? _a : undefined,\n                model: this.model.attachments\n            })\n        });\n        // Stop codemirror handling paste\n        this.editor.setOption('handlePaste', false);\n        // Check if heading cell is set to be collapsed\n        this._headingCollapsed = ((_b = this.model.metadata.get(MARKDOWN_HEADING_COLLAPSED)) !== null && _b !== void 0 ? _b : false);\n        // Throttle the rendering rate of the widget.\n        this._monitor = new ActivityMonitor({\n            signal: this.model.contentChanged,\n            timeout: RENDER_TIMEOUT\n        });\n        this._monitor.activityStopped.connect(() => {\n            if (this._rendered) {\n                this.update();\n            }\n        }, this);\n        void this._updateRenderedInput().then(() => {\n            this._ready.resolve(void 0);\n        });\n        this.renderCollapseButtons(this._renderer);\n        this.renderInput(this._renderer);\n    }\n    /**\n     * A promise that resolves when the widget renders for the first time.\n     */\n    get ready() {\n        return this._ready.promise;\n    }\n    /**\n     * Text that represents the heading if cell is a heading.\n     * Returns empty string if not a heading.\n     */\n    get headingInfo() {\n        let text = this.model.value.text;\n        const lines = marked.lexer(text);\n        let line;\n        for (line of lines) {\n            if (line.type === 'heading') {\n                return { text: line.text, level: line.depth };\n            }\n            else if (line.type === 'html') {\n                let match = line.raw.match(/<h([1-6])(.*?)>(.*?)<\\/h\\1>/);\n                if (match === null || match === void 0 ? void 0 : match[3]) {\n                    return { text: match[3], level: parseInt(match[1]) };\n                }\n                return { text: '', level: -1 };\n            }\n        }\n        return { text: '', level: -1 };\n    }\n    get headingCollapsed() {\n        return this._headingCollapsed;\n    }\n    set headingCollapsed(value) {\n        this._headingCollapsed = value;\n        if (value) {\n            this.model.metadata.set(MARKDOWN_HEADING_COLLAPSED, value);\n        }\n        else if (this.model.metadata.has(MARKDOWN_HEADING_COLLAPSED)) {\n            this.model.metadata.delete(MARKDOWN_HEADING_COLLAPSED);\n        }\n        const collapseButton = this.inputArea.promptNode.getElementsByClassName(HEADING_COLLAPSER_CLASS)[0];\n        if (collapseButton) {\n            collapseButton.setAttribute('style', `background:\n      ${value ? 'var(--jp-icon-caret-right)' : 'var(--jp-icon-caret-down)'} no-repeat center`);\n        }\n        this.renderCollapseButtons(this._renderer);\n    }\n    get numberChildNodes() {\n        return this._numberChildNodes;\n    }\n    set numberChildNodes(value) {\n        this._numberChildNodes = value;\n        this.renderCollapseButtons(this._renderer);\n    }\n    get toggleCollapsedSignal() {\n        return this._toggleCollapsedSignal;\n    }\n    /**\n     * Whether the cell is rendered.\n     */\n    get rendered() {\n        return this._rendered;\n    }\n    set rendered(value) {\n        if (value === this._rendered) {\n            return;\n        }\n        this._rendered = value;\n        this._handleRendered();\n        // Refreshing an editor can be really expensive, so we don't call it from\n        // _handleRendered, since _handledRendered is also called on every update\n        // request.\n        if (!this._rendered) {\n            this.editor.refresh();\n        }\n    }\n    maybeCreateCollapseButton() {\n        if (this.headingInfo.level > 0 &&\n            this.inputArea.promptNode.getElementsByClassName(HEADING_COLLAPSER_CLASS)\n                .length == 0) {\n            let collapseButton = this.inputArea.promptNode.appendChild(document.createElement('button'));\n            collapseButton.className = `bp3-button bp3-minimal jp-Button minimal ${HEADING_COLLAPSER_CLASS}`;\n            collapseButton.style.background = `${this._headingCollapsed\n                ? 'var(--jp-icon-caret-right)'\n                : 'var(--jp-icon-caret-down)'} no-repeat center`;\n            collapseButton.onclick = (event) => {\n                this.headingCollapsed = !this.headingCollapsed;\n                this._toggleCollapsedSignal.emit(this._headingCollapsed);\n            };\n        }\n    }\n    maybeCreateOrUpdateExpandButton() {\n        var _a, _b;\n        const expandButton = this.node.getElementsByClassName(SHOW_HIDDEN_CELLS_CLASS);\n        // Create the \"show hidden\" button if not already created\n        if (this.headingCollapsed &&\n            expandButton.length === 0 &&\n            this._numberChildNodes > 0) {\n            const numberChildNodes = document.createElement('button');\n            numberChildNodes.className = `bp3-button bp3-minimal jp-Button ${SHOW_HIDDEN_CELLS_CLASS}`;\n            addIcon.render(numberChildNodes);\n            const numberChildNodesText = document.createElement('div');\n            numberChildNodesText.nodeValue = `${this._numberChildNodes} cell${this._numberChildNodes > 1 ? 's' : ''} hidden`;\n            numberChildNodes.appendChild(numberChildNodesText);\n            numberChildNodes.onclick = () => {\n                this.headingCollapsed = false;\n                this._toggleCollapsedSignal.emit(this._headingCollapsed);\n            };\n            this.node.appendChild(numberChildNodes);\n        }\n        else if (((_b = (_a = expandButton === null || expandButton === void 0 ? void 0 : expandButton[0]) === null || _a === void 0 ? void 0 : _a.childNodes) === null || _b === void 0 ? void 0 : _b.length) > 1) {\n            // If the heading is collapsed, update text\n            if (this._headingCollapsed) {\n                expandButton[0].childNodes[1].textContent = `${this._numberChildNodes} cell${this._numberChildNodes > 1 ? 's' : ''} hidden`;\n                // If the heading isn't collapsed, remove the button\n            }\n            else {\n                for (const el of expandButton) {\n                    this.node.removeChild(el);\n                }\n            }\n        }\n    }\n    /**\n     * Render the collapse button for heading cells,\n     * and for collapsed heading cells render the \"expand hidden cells\"\n     * button.\n     */\n    renderCollapseButtons(widget) {\n        this.node.classList.toggle(MARKDOWN_HEADING_COLLAPSED, this._headingCollapsed);\n        this.maybeCreateCollapseButton();\n        this.maybeCreateOrUpdateExpandButton();\n    }\n    /**\n     * Render an input instead of the text editor.\n     */\n    renderInput(widget) {\n        this.addClass(RENDERED_CLASS);\n        this.renderCollapseButtons(widget);\n        this.inputArea.renderInput(widget);\n    }\n    /**\n     * Show the text editor instead of rendered input.\n     */\n    showEditor() {\n        this.removeClass(RENDERED_CLASS);\n        this.inputArea.showEditor();\n    }\n    /*\n     * Handle `update-request` messages.\n     */\n    onUpdateRequest(msg) {\n        // Make sure we are properly rendered.\n        this._handleRendered();\n        super.onUpdateRequest(msg);\n    }\n    /**\n     * Modify the cell source to include a reference to the attachment.\n     */\n    updateCellSourceWithAttachment(attachmentName, URI) {\n        var _a, _b;\n        const textToBeAppended = `![${attachmentName}](attachment:${URI !== null && URI !== void 0 ? URI : attachmentName})`;\n        (_b = (_a = this.editor).replaceSelection) === null || _b === void 0 ? void 0 : _b.call(_a, textToBeAppended);\n    }\n    /**\n     * Handle the rendered state.\n     */\n    _handleRendered() {\n        if (!this._rendered) {\n            this.showEditor();\n        }\n        else {\n            // TODO: It would be nice for the cell to provide a way for\n            // its consumers to hook into when the rendering is done.\n            void this._updateRenderedInput();\n            this.renderInput(this._renderer);\n        }\n    }\n    /**\n     * Update the rendered input.\n     */\n    _updateRenderedInput() {\n        const model = this.model;\n        const text = (model && model.value.text) || DEFAULT_MARKDOWN_TEXT;\n        // Do not re-render if the text has not changed.\n        if (text !== this._prevText) {\n            const mimeModel = new MimeModel({ data: { 'text/markdown': text } });\n            if (!this._renderer) {\n                this._renderer = this._rendermime.createRenderer('text/markdown');\n                this._renderer.addClass(MARKDOWN_OUTPUT_CLASS);\n            }\n            this._prevText = text;\n            return this._renderer.renderModel(mimeModel);\n        }\n        return Promise.resolve(void 0);\n    }\n    /**\n     * Clone the cell, using the same model.\n     */\n    clone() {\n        const constructor = this.constructor;\n        return new constructor({\n            model: this.model,\n            contentFactory: this.contentFactory,\n            rendermime: this._rendermime,\n            placeholder: false\n        });\n    }\n}\n/** ****************************************************************************\n * RawCell\n ******************************************************************************/\n/**\n * A widget for a raw cell.\n */\nexport class RawCell extends Cell {\n    /**\n     * Construct a raw cell widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass(RAW_CELL_CLASS);\n    }\n    /**\n     * Clone the cell, using the same model.\n     */\n    clone() {\n        const constructor = this.constructor;\n        return new constructor({\n            model: this.model,\n            contentFactory: this.contentFactory,\n            placeholder: false\n        });\n    }\n}\n//# sourceMappingURL=widget.js.map","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var defaults$5 = {exports: {}};\n\n  function getDefaults$1() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  function changeDefaults$1(newDefaults) {\n    defaults$5.exports.defaults = newDefaults;\n  }\n\n  defaults$5.exports = {\n    defaults: getDefaults$1(),\n    getDefaults: getDefaults$1,\n    changeDefaults: changeDefaults$1\n  };\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest$1 = {\n    exec: function noopTest() {}\n  };\n\n  function merge$2(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n\n  var defaults$4 = defaults$5.exports.defaults;\n  var rtrim = helpers.rtrim,\n      splitCells = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked,\n            endMatch;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item;\n\n          if (!this.options.pedantic) {\n            // Determine if current item contains the end of the list\n            endMatch = item.match(new RegExp('\\\\n\\\\s*\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\S'));\n\n            if (endMatch) {\n              addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              item = item.substring(0, endMatch.index);\n              raw = item;\n              l = i + 1;\n            }\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list or continuation\n              itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\n$/) ? '' : '\\n') + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else if ( // different bullet style\n            !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n              addBack = itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              i = l - 1;\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // trim item newlines at end\n\n\n          item = rtrim(item, '\\n');\n\n          if (i !== l - 1) {\n            raw = raw + '\\n';\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(raw);\n\n          if (i !== l - 1) {\n            next = raw.slice(-2) === '\\n\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: src.slice(2, lLength + match.index + rLength - 1)\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest = helpers.noopTest,\n      edit = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block$1.item = edit(block$1.item, 'gm').replace(/bull/g, block$1.bullet).getRegex();\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block$1.gfm.nptable = edit(block$1.gfm.nptable).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                   (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_*]*?\\*[^_*]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^_*]*?\\_[^_*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n\n  var Tokenizer$1 = Tokenizer_1;\n  var defaults$3 = defaults$5.exports.defaults;\n  var block = rules.block,\n      inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call(_this, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call(this, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call(_this2, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call(this, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults$5.exports.defaults;\n  var cleanUrl = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var Renderer$1 = Renderer_1;\n  var TextRenderer$1 = TextRenderer_1;\n  var Slugger$1 = Slugger_1;\n  var defaults$1 = defaults$5.exports.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer$1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer$1();\n      this.slugger = new Slugger$1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call(this, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call(this, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var Lexer = Lexer_1;\n  var Parser = Parser_1;\n  var Tokenizer = Tokenizer_1;\n  var Renderer = Renderer_1;\n  var TextRenderer = TextRenderer_1;\n  var Slugger = Slugger_1;\n  var merge = helpers.merge,\n      checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n      escape = helpers.escape;\n  var getDefaults = defaults$5.exports.getDefaults,\n      changeDefaults = defaults$5.exports.changeDefaults,\n      defaults = defaults$5.exports.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(_this, token);\n\n          if (walkTokens) {\n            walkTokens(token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n"],"names":["DRAG_IMAGE_CLASS","CELL_DRAG_CONTENT_CLASS","CELL_DRAG_PROMPT_CLASS","CELL_DRAG_MULTIPLE_BACK","CellDragUtils","findCell","node","cells","isCellNode","cellIndex","parentElement","each","cell","index","detectTargetArea","target","targetArea","editorWidget","contains","promptNode","shouldStartDrag","prevX","prevY","nextX","nextY","dx","Math","abs","dy","createCellDragImage","activeCell","selectedCells","count","length","promptNumber","model","type","executionCount","toString","cellContent","value","text","split","slice","VirtualDOM","h","className","Collapser","ReactWidget","constructor","super","this","addClass","collapsed","render","onClick","e","handleClick","InputCollapser","_a","parent","inputHidden","update","OutputCollapser","outputHidden","_b","area","ElementExt","CellHeader","Widget","CellFooter","InputArea","options","contentFactory","defaultContentFactory","prompt","_prompt","createInputPrompt","editorOptions","factory","editorFactory","updateOnShow","editor","_editor","CodeEditorWrapper","layout","PanelLayout","addWidget","placeholder","renderInput","widget","_rendered","hide","showEditor","show","setPrompt","dispose","isDisposed","ContentFactory","defaultEditorFactory","InputPrompt","CodeMirrorEditorFactory","newInlineEditor","_executionCount","textContent","AttachmentsModel","_map","ObservableMap","_isDisposed","_stateChanged","Signal","_changed","_modelDB","_serialized","_changeGuard","values","key","Object","keys","undefined","set","changed","connect","_onMapChanged","modelDB","createValue","get","fromJSON","toJSON","_onSerializedChanged","stateChanged","has","item","_createItem","remove","delete","clear","forEach","ret","createAttachmentModel","_onGenericChange","sender","args","emit","newValue","AttachmentModel","AttachmentsResolver","_parent","_model","async","url","startsWith","resolveUrl","path","getDownloadUrl","attachment","data","mimeType","imageRendererFactory","Error","isLocal","_c","call","globalModelDBMutex","isCodeCellModel","isMarkdownCellModel","isRawCellModel","CellModel","CodeEditor","id","UUID","contentChanged","onGenericChange","observableMetadata","createMap","onModelDBMetadataChange","trusted","onTrustedChanged","metadata","Array","isArray","source","map","s","replace","join","JSONExt","sharedModel","getId","getValue","setValue","create","JSON","parse","stringify","cell_type","switchSharedModel","reinitialize","getMetadata","_updateModelDBMetadata","event","_changeCellMetadata","setMetadata","jupyter","name","scrolled","tags","_onSharedModelChanged","change","metadataChange","AttachmentsCellModel","attachments","_attachments","createAttachmentsModel","RawCellModel","MarkdownCellModel","CodeCellModel","_executedCode","_isDirty","outputs","execution_count","trim","_onValueChanged","_onExecutionCountChanged","setOutputs","_outputs","createOutputArea","onModelDBOutputsChange","Private","collapseChanged","oldValue","hasOwnProperty","clearExecution","getOutputs","output","add","isDirty","_setDirty","v","codeCell","newValues","updateOutputs","newIndex","oldIndex","oldValues","outputsChange","executionCountChange","OutputAreaModel","outputs_hidden","newJupyter","t","p","prototype","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","CONTENT_CLASS","Placeholder","callback","_callback","InputPlaceholder","ellipsesIcon","elementPosition","height","width","OutputPlaceholder","CELL_RESIZED_CLASS","ResizeHandle","targetNode","_isActive","_isDragging","_protectedWidth","onAfterAttach","msg","addEventListener","onAfterDetach","removeEventListener","handleEvent","parentNode","childNodes","classList","document","documentElement","style","setProperty","_mouseOffset","clientX","getBoundingClientRect","x","window","targetRect","inputWidth","resized_ratio","min","max","round","DIRTY_CLASS","MARKDOWN_HEADING_COLLAPSED","HEADING_COLLAPSER_CLASS","RENDERED_CLASS","NO_OUTPUTS_CLASS","CONTENTS_MIME_RICH","Cell","_readOnly","_inputHidden","_syncCollapse","_syncEditable","header","createCellHeader","inputWrapper","_inputWrapper","Panel","inputCollapser","input","_input","updateEditorOnShow","_inputPlaceholder","footer","createCellFooter","editorConfig","setOptions","onMetadataChanged","initializeState","loadCollapseState","loadEditableState","firstElementChild","inputArea","readOnly","syncEditable","saveEditableState","current","ready","Promise","resolve","syncCollapse","saveCollapseState","handleInputHidden","assign","source_hidden","clone","onActivateRequest","focus","onFitRequest","refresh","onUpdateRequest","getOption","setOption","toggleClass","_editorFactory","createOutputPrompt","OutputPrompt","createStdin","Stdin","CodeCell","_outputHidden","_syncScrolled","_savingMetadata","rendermime","_rendermime","outputWrapper","_outputWrapper","outputCollapser","_output","OutputArea","maxNumberOutputs","outputLengthChanged","_outputLengthHandler","insertWidget","_outputPlaceholder","onStateChanged","loadScrolledState","outputArea","removeWidget","isHidden","outputsScrolled","_outputsScrolled","syncScrolled","saveScrolledState","cloneOutputArea","SimplifiedOutputArea","disconnect","removeClass","force","execute","sessionContext","code","session","kernel","cellId","recordTiming","future","msgPromise","recordTimingHook","label","msg_type","content","execution_state","date","Date","toISOString","timingInfo","registerMessageHook","started","finished","AttachmentsCell","_evtPaste","preventDefault","_evtNativeDrop","_evtDragOver","_evtDrop","onBeforeDetach","some","mimeData","hasData","getData","mimetype","stopPropagation","dropAction","proposedAction","clipboardData","items","kind","getAsString","replaceSelection","_attachFiles","dataTransfer","supportedMimeTypes","toArray","filter","types","withContent","URI","_generateURI","updateCellSourceWithAttachment","then","fullModel","blob","getAsFile","_attachFile","reader","FileReader","onload","evt","href","protocol","URLExt","result","matches","exec","bundle","onerror","console","error","readAsDataURL","lastIndex","lastIndexOf","concat","substring","MarkdownCell","_toggleCollapsedSignal","_renderer","_prevText","_ready","PromiseDelegate","resolver","_headingCollapsed","_monitor","ActivityMonitor","signal","timeout","activityStopped","_updateRenderedInput","renderCollapseButtons","promise","headingInfo","lines","line","level","depth","match","raw","parseInt","headingCollapsed","collapseButton","getElementsByClassName","setAttribute","numberChildNodes","_numberChildNodes","toggleCollapsedSignal","rendered","_handleRendered","maybeCreateCollapseButton","appendChild","createElement","background","onclick","maybeCreateOrUpdateExpandButton","expandButton","addIcon","numberChildNodesText","nodeValue","el","removeChild","toggle","attachmentName","textToBeAppended","mimeModel","MimeModel","createRenderer","renderModel","RawCell","module","exports","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_arrayLikeToArray","arr","len","arr2","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","next","bind","minLen","n","from","test","_unsupportedIterableToArray","done","TypeError","defaults$5","getDefaults$1","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","getDefaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape$1","html","_","toLowerCase","charAt","String","fromCharCode","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","domain","base","rtrim$1","relativeBase","str","c","invert","l","suffLen","currChar","substr","helpers","encode","regex","opt","obj","val","getRegex","RegExp","prot","decodeURIComponent","encodeURI","arguments","tableRow","offset","escaped","curr","splice","push","b","warn","pattern","defaults$4","rtrim","splitCells","_escape","findClosingBracket","outputLink","cap","link","title","Tokenizer_1","Tokenizer","_proto","space","src","rules","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentCodeCompensation","lang","heading","trimmed","nptable","align","hr","blockquote","list","bcurr","bnext","addBack","loose","istask","ischecked","endMatch","bull","isordered","ordered","start","itemMatch","listItemStart","task","checked","pre","def","tag","table","lheading","paragraph","escape","inline","inLink","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","tokens","prevCapZero","_backpedal","inlineText","noopTest","edit","merge$1","block$1","_paragraph","_label","_title","bullet","_tag","_comment","normal","inline$1","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Tokenizer$1","defaults$3","repeatString","out","charCodeAt","random","Lexer_1","Lexer","lex","lexInline","inlineTokens","Constructor","protoProps","staticProps","blockTokens","top","token","lastToken","cutSrc","lastParagraphClipped","_this","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","j","k","l2","row","_this2","keepPrevChar","includes","startInline","defaults$2","cleanUrl","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","listitem","checkbox","tablerow","tablecell","flags","image","_text","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Renderer$1","TextRenderer$1","Slugger$1","defaults$1","unescape","Parser_1","Parser","textRenderer","parseInline","l3","itemBody","renderers","unshift","merge","checkSanitizeDeprecation","marked","err","pending","setTimeout","_tokens","message","use","_len","_key","hasExtensions","opts","apply","childTokens","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_step","_loop3","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","_iterator","parser","lexer"],"sourceRoot":""}